// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/nanobox-io/golang-discovery (interfaces: Discover)

package mock_golang_discovery

import (
	gomock "github.com/golang/mock/gomock"
	golang_discovery "github.com/nanobox-io/golang-discovery"
	time "time"
)

// Mock of Discover interface
type MockDiscover struct {
	ctrl     *gomock.Controller
	recorder *_MockDiscoverRecorder
}

// Recorder for MockDiscover (not exported)
type _MockDiscoverRecorder struct {
	mock *MockDiscover
}

func NewMockDiscover(ctrl *gomock.Controller) *MockDiscover {
	mock := &MockDiscover{ctrl: ctrl}
	mock.recorder = &_MockDiscoverRecorder{mock}
	return mock
}

func (_m *MockDiscover) EXPECT() *_MockDiscoverRecorder {
	return _m.recorder
}

func (_m *MockDiscover) Add(_param0 string, _param1 string) {
	_m.ctrl.Call(_m, "Add", _param0, _param1)
}

func (_mr *_MockDiscoverRecorder) Add(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Add", arg0, arg1)
}

func (_m *MockDiscover) Close() error {
	ret := _m.ctrl.Call(_m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockDiscoverRecorder) Close() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Close")
}

func (_m *MockDiscover) Handle(_param0 string, _param1 golang_discovery.Generator) {
	_m.ctrl.Call(_m, "Handle", _param0, _param1)
}

func (_mr *_MockDiscoverRecorder) Handle(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Handle", arg0, arg1)
}

func (_m *MockDiscover) Loop(_param0 time.Duration) error {
	ret := _m.ctrl.Call(_m, "Loop", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockDiscoverRecorder) Loop(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Loop", arg0)
}

func (_m *MockDiscover) Remove(_param0 string) {
	_m.ctrl.Call(_m, "Remove", _param0)
}

func (_mr *_MockDiscoverRecorder) Remove(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Remove", arg0)
}

func (_m *MockDiscover) Unhandle(_param0 string) {
	_m.ctrl.Call(_m, "Unhandle", _param0)
}

func (_mr *_MockDiscoverRecorder) Unhandle(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Unhandle", arg0)
}
